name: CI/CD - Docker Compose Fullstack

on:
  push:
    branches:
      - main
  workflow_dispatch: # allows manual trigger

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3Ô∏è‚É£ Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # 4Ô∏è‚É£ Create environment file
      - name: Create .env file
        run: |
          echo "REACT_APP_API_URL=http://backend-container:5003/api/users" >> .env
          echo "FRONTEND_PORT=3000" >> .env
          echo "PORT=5003" >> .env
          echo "MONGO_URI=mongodb://mongo-container:27017/registrationDB" >> .env

      # 5Ô∏è‚É£ Build and start Docker containers
      - name: Build and start containers
        run: |
          docker-compose up -d --build
          docker-compose ps

      # 6Ô∏è‚É£ Test backend API
      - name: Test backend API
        run: |
          echo "üß™ Testing backend API..."
          docker exec backend-container curl -s http://localhost:5003/api/users || exit 1

      # 7Ô∏è‚É£ Test frontend page
      - name: Test frontend page
        run: |
          echo "üß™ Testing frontend..."
          docker exec frontend-container curl -s http://localhost:3000 | grep "<!DOCTYPE html>" || exit 1

      # 8Ô∏è‚É£ Verify containers
      - name: Verify running containers
        run: docker ps -a

      # 9Ô∏è‚É£ Stop and clean up after tests
      - name: Stop Docker Compose services
        if: always()
        run: docker-compose down -v

      # üîü Log in to Docker Hub (for deployment)
      - name: Log in to Docker Hub
        if: success()
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 1Ô∏è‚É£1Ô∏è‚É£ Build and push backend image
      - name: Build and push backend image
        if: success()
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest -f backend/Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest

      # 1Ô∏è‚É£2Ô∏è‚É£ Build and push frontend image
      - name: Build and push frontend image
        if: success()
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest -f frontend/Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

      # ‚úÖ 1Ô∏è‚É£3Ô∏è‚É£ Confirm deployment
      - name: Deployment summary
        if: success()
        run: |
          echo "‚úÖ CI/CD completed successfully!"
          echo "Frontend image: ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest"
          echo "Backend image:  ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest"
